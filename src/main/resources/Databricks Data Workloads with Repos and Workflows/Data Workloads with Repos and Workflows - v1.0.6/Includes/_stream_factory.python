{"version":"NotebookV1","origId":2139271331630482,"name":"_stream_factory","language":"python","commands":[{"version":"CommandV1","origId":2139271331630484,"guid":"67756db1-5679-4eab-9b2b-1add314de904","subtype":"command","commandType":"auto","position":3.0,"command":"def load_user_reg_batch(datasets_dir, target_dir, batch_start, batch_end):\n\n    source_dataset = f\"{datasets_dir}/user-reg\"\n    target_path = f\"{target_dir}/user_reg\"\n\n    df = (spark.read\n          .format(\"json\")\n          .schema(\"device_id long, mac_address string, registration_timestamp double, user_id long\")\n          .load(source_dataset)\n          .withColumn(\"date\", F.col(\"registration_timestamp\").cast(\"timestamp\").cast(\"date\"))\n          .withColumn(\"batch\", F.when(F.col(\"date\") < \"2019-12-01\", F.lit(1)).otherwise(F.dayofmonth(F.col(\"date\"))+1))\n          .filter(f\"batch >= {batch_start}\")\n          .filter(f\"batch <= {batch_end}\")          \n          .drop(\"date\", \"batch\")\n          .cache())\n\n    df.write.mode(\"append\").format(\"json\").save(target_path)\n    return df.count()        \n\n\ndef load_cdc_batch(datasets_dir, target_dir, batch_start, batch_end):\n    \n    source_dataset = f\"{datasets_dir}/pii/raw\"\n    target_path = f\"{target_dir}/cdc\"\n\n    df = (spark.read\n      .load(source_dataset)\n      .filter(f\"batch >= {batch_start}\")\n      .filter(f\"batch <= {batch_end}\")\n    )   \n    df.write.mode(\"append\").format(\"json\").save(target_path)\n    return df.count()\n\n\ndef load_daily_batch(datasets_dir, target_dir, batch_start, batch_end):\n    \n    source_path = f\"{datasets_dir}/bronze\"\n    target_path = f\"{target_dir}/daily\"\n\n\n    df = (spark.read\n      .load(source_path)\n      .withColumn(\"day\", \n        F.when(F.col(\"date\") <= '2019-12-01', 1)\n        .otherwise(F.dayofmonth(\"date\")))\n      .filter(F.col(\"day\") >= batch_start)\n      .filter(F.col(\"day\") <= batch_end)\n      .drop(\"date\", \"week_part\", \"day\")  \n    )\n    df.write.mode(\"append\").format(\"json\").save(target_path)\n    return df.count()\n\nNone\n","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"51407fee-267d-4a4c-83ed-b47e9a12c660"},{"version":"CommandV1","origId":2139271331630483,"guid":"afdb72b4-03dc-4882-93ea-e6ced86c36d5","subtype":"command","commandType":"auto","position":2.0,"command":"from dbacademy import dbgems\n\nclass StreamFactory:\n    \"\"\"\n    Incrementally loads data from a source dataset to a target directory.\n\n    Attributes:\n        source_dir: source path for datasets\n        target_dir: landing path for streams\n        max_batch: total number of batches before exhausting stream\n        batch: counter used to track current batch number\n\n    Methods:\n        load(continuous=False)\n        load_batch(target, batch, end): dataset-specific function provided at instantiation\n    \"\"\"\n    def __init__(self, source_dir, target_dir, load_batch, max_batch):\n        self.source_dir = source_dir\n        self.target_dir = target_dir\n        self.load_batch = load_batch\n        self.max_batch = max_batch\n        self.batch = 1     \n        \n    def load(self, continuous=False):\n        \n        if self.batch > self.max_batch:\n            print(\"Data source exhausted\", end=\"...\")\n            total = 0                \n        elif continuous == True:\n            print(f\"Loading all batches to the stream\", end=\"...\")\n            total = self.load_batch(self.source_dir, self.target_dir, self.batch, self.max_batch)\n            self.batch = self.max_batch + 1\n        else:\n            print(f\"Loading batch #{self.batch} to the stream\", end=\"...\")\n            total = self.load_batch(self.source_dir, self.target_dir, self.batch, self.batch)\n            self.batch = self.batch + 1\n            \n        print(f\"Loaded {total:,} records\")\n\nNone","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"4f89260d-f79d-449d-a95a-2fd26bbc87ef"}],"dashboards":[],"guid":"cb257e08-0913-4bd0-be10-ee5fec5518e6","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{},"reposExportFormat":"SOURCE"}