{"version":"NotebookV1","origId":2139271331630462,"name":"_common","language":"python","commands":[{"version":"CommandV1","origId":2139271331630464,"guid":"14d7a88b-c385-4c21-a5ce-40e4b37e4dca","subtype":"command","commandType":"auto","position":3.0,"command":"%pip $pip_command","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"eb68d9a9-d9a1-4f79-96cf-6db79653e7f0"},{"version":"CommandV1","origId":2139271331630463,"guid":"82af2408-25e5-4c46-a2bf-79fe31ee1e78","subtype":"command","commandType":"auto","position":2.0,"command":"def __validate_libraries():\n    import requests\n    try:\n        site = \"https://github.com/databricks-academy/dbacademy\"\n        response = requests.get(site)\n        error = f\"Unable to access GitHub or PyPi resources (HTTP {response.status_code} for {site}).\"\n        assert response.status_code == 200, \"{error} Please see the \\\"Troubleshooting | {section}\\\" section of the \\\"Version Info\\\" notebook for more information.\".format(error=error, section=\"Cannot Install Libraries\")\n    except Exception as e:\n        if type(e) is AssertionError: raise e\n        error = f\"Unable to access GitHub or PyPi resources ({site}).\"\n        raise AssertionError(\"{error} Please see the \\\"Troubleshooting | {section}\\\" section of the \\\"Version Info\\\" notebook for more information.\".format(error=error, section=\"Cannot Install Libraries\")) from e\n\ndef __install_libraries():\n    global pip_command\n    \n    specified_version = f\"v3.0.69\"\n    key = \"dbacademy.library.version\"\n    version = spark.conf.get(key, specified_version)\n\n    if specified_version != version:\n        print(\"** Dependency Version Overridden *******************************************************************\")\n        print(f\"* This course was built for {specified_version} of the DBAcademy Library, but it is being overridden via the Spark\")\n        print(f\"* configuration variable \\\"{key}\\\". The use of version v3.0.69 is not advised as we\")\n        print(f\"* cannot guarantee compatibility with this version of the course.\")\n        print(\"****************************************************************************************************\")\n\n    try:\n        from dbacademy import dbgems  \n        installed_version = dbgems.lookup_current_module_version(\"dbacademy\")\n        if installed_version == version:\n            pip_command = \"list --quiet\"  # Skipping pip install of pre-installed python library\n        else:\n            print(f\"WARNING: The wrong version of dbacademy is attached to this cluster. Expected {version}, found {installed_version}.\")\n            print(f\"Installing the correct version.\")\n            raise Exception(\"Forcing re-install\")\n\n    except Exception as e:\n        # The import fails if library is not attached to cluster\n        if not version.startswith(\"v\"): library_url = f\"git+https://github.com/databricks-academy/dbacademy@{version}\"\n        else: library_url = f\"https://github.com/databricks-academy/dbacademy/releases/download/{version}/dbacademy-{version[1:]}-py3-none-any.whl\"\n\n        default_command = f\"install --quiet --disable-pip-version-check {library_url}\"\n        pip_command = spark.conf.get(\"dbacademy.library.install\", default_command)\n\n        if pip_command != default_command:\n            print(f\"WARNING: Using alternative library installation:\\n| default: %pip {default_command}\\n| current: %pip {pip_command}\")\n        else:\n            # We are using the default libraries; next we need to verify that we can reach those libraries.\n            __validate_libraries()\n\n__install_libraries()","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"49e8f613-9e07-4468-9af6-c5ac780dd8ba"},{"version":"CommandV1","origId":2139271331630466,"guid":"2130f7e9-0413-4e2d-8184-8590f42c9d93","subtype":"command","commandType":"auto","position":5.0,"command":"from dbacademy import dbgems\nfrom dbacademy.dbhelper import DBAcademyHelper, Paths, CourseConfig, LessonConfig\n\ncourse_config = CourseConfig(course_code = \"dwwraw\",\n                             course_name = \"data-workloads-with-repos-and-workflows-source\",\n                             data_source_name = \"data-engineer-learning-path\",\n                             data_source_version = \"v04\",\n                             install_min_time = \"2 min\",\n                             install_max_time = \"10 min\",\n                             remote_files = remote_files,\n                             supported_dbrs = [\"12.2.x-scala2.12\", \"12.2.x-photon-scala2.12\", \"12.2.x-cpu-ml-scala2.12\"],\n                             expected_dbrs = \"12.2.x-scala2.12, 12.2.x-photon-scala2.12, 12.2.x-cpu-ml-scala2.12\")\n\n\nlesson_config = LessonConfig(name = None,\n                             create_schema = True,\n                             create_catalog = False,\n                             requires_uc = False,\n                             installing_datasets = True,\n                             enable_streaming_support = False,\n                             enable_ml_support = False)\n","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"950b72cd-b9af-4f62-a5b8-ae8deaedce97"},{"version":"CommandV1","origId":2139271331630465,"guid":"525a2e22-60b5-4cab-a55d-d9b9e37b60d3","subtype":"command","commandType":"auto","position":4.0,"command":"%run ./_dataset_index","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"49767078-4a0b-4719-8d2d-4317ddf9fc15"}],"dashboards":[],"guid":"4100ad77-cf6b-459b-a44d-4747fb229591","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{},"reposExportFormat":"SOURCE"}