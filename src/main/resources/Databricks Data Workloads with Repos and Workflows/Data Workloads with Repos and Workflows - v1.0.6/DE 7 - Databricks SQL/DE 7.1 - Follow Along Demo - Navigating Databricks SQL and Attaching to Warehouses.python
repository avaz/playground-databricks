{"version":"NotebookV1","origId":2139271331630337,"name":"DE 7.1 - Follow Along Demo - Navigating Databricks SQL and Attaching to Warehouses","language":"python","commands":[{"version":"CommandV1","origId":2139271331630340,"guid":"dbddb17b-0ddb-4d92-8716-40c8b5e65ce2","subtype":"command","commandType":"auto","position":4.0,"command":"%md-sandbox\n&copy; 2023 Databricks, Inc. All rights reserved.<br/>\nApache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"https://www.apache.org/\">Apache Software Foundation</a>.<br/>\n<br/>\n<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"https://help.databricks.com/\">Support</a>","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"18ef17d3-2589-4fbf-bca0-502c9a300800"},{"version":"CommandV1","origId":2139271331630339,"guid":"39ca6c08-68c8-4efd-a983-5a82186ccfa1","subtype":"command","commandType":"auto","position":3.0,"command":"%md --i18n-be1590dd-19ac-445c-9b7f-2321113a0c4e\n\n\n# Navigating Databricks SQL and Attaching to SQL Warehouses\n\n* Navigate to Databricks SQL  \n  * Make sure that SQL is selected from the workspace option in the sidebar (directly below the Databricks logo)\n* Make sure a SQL warehouse is on and accessible\n  * Navigate to SQL Warehouses in the sidebar\n  * If a SQL warehouse exists and has the State **`Running`**, you'll use this SQL warehouse\n  * If a SQL warehouse exists but is **`Stopped`**, click the **`Start`** button if you have this option (**NOTE**: Start the smallest SQL warehouse you have available to you) \n  * If no SQL warehouses exist and you have the option, click **`Create SQL Warehouse`**; name the SQL warehouse something you'll recognize and set the cluster size to 2X-Small. Leave all other options as default.\n  * If you have no way to create or attach to a SQL warehouse, you'll need to contact a workspace administrator and request access to compute resources in Databricks SQL to continue.\n* Navigate to home page in Databricks SQL\n  * Click the Databricks logo at the top of the side nav bar\n* Locate the **Sample dashboards** and click **`Visit gallery`**\n* Click **`Import`** next to the **Retail Revenue & Supply Chain** option\n  * Assuming you have a SQL warehouse available, this should load a dashboard and immediately display results\n  * Click **Refresh** in the top right (the underlying data has not changed, but this is the button that would be used to pick up changes)\n\n# Updating a DBSQL Dashboard\n\n* Use the sidebar navigator to find the **Dashboards**\n  * Locate the sample dashboard you just loaded; it should be called **Retail Revenue & Supply Chain** and have your username under the **`Created By`** field. **NOTE**: the **My Dashboards** option on the right hand side can serve as a shortcut to filter out other dashboards in the workspace\n  * Click on the dashboard name to view it\n* View the query behind the **Shifts in Pricing Priorities** plot\n  * Hover over the plot; three vertical dots should appear. Click on these\n  * Select **View Query** from the menu that appears\n* Review the SQL code used to populate this plot\n  * Note that 3 tier namespacing is used to identify the source table; this is a preview of new functionality to be supported by Unity Catalog\n  * Click **`Run`** in the top right of the screen to preview the results of the query\n* Review the visualization\n  * Under the query, a tab named **Table** should be selected; click **Price by Priority over Time** to switch to a preview of your plot\n  * Click **Edit Visualization** at the bottom of the screen to review settings\n  * Explore how changing settings impacts your visualization\n  * If you wish to apply your changes, click **Save**; otherwise, click **Cancel**\n* Back in the query editor, click the **Add Visualization** button to the right of the visualization name\n  * Create a bar graph\n  * Set the **X Column** as **`Date`**\n  * Set the **Y Column** as **`Total Price`**\n  * **Group by** **`Priority`**\n  * Set **Stacking** to **`Stack`**\n  * Leave all other settings as defaults\n  * Click **Save**\n* Back in the query editor, click the default name for this visualization to edit it; change the visualization name to **`Stacked Price`**\n* Add the bottom of the screen, click the three vertical dots to the left of the **`Edit Visualization`** button\n  * Select **Add to Dashboard** from the menu\n  * Select your **`Retail Revenue & Supply Chain`** dashboard\n* Navigate back to your dashboard to view this change\n\n# Create a New Query\n\n* Use the sidebar to navigate to **Queries**\n* Click the **`Create Query`** button\n* Make sure you are connected to a SQL warehouse. In the **Schema Browser**, click on the current metastore and select **`samples`**. \n  * Select the **`tpch`** database\n  * Click on the **`partsupp`** table to get a preview of the schema\n  * While hovering over the **`partsupp`** table name, click the **>>** button to insert the table name into your query text\n* Write your first query:\n  * **`SELECT * FROM`** the **`partsupp`** table using the full name imported in the last step; click **Run** to preview results\n  * Modify this query to **`GROUP BY ps_partkey`** and return the **`ps_partkey`** and **`sum(ps_availqty)`**; click **Run** to preview results\n  * Update your query to alias the 2nd column to be named **`total_availqty`** and re-execute the query\n* Save your query\n  * Click the **Save** button next to **Run** near the top right of the screen\n  * Give the query a name you'll remember\n* Add the query to your dashboard\n  * Click the three vertical buttons at the bottom of the screen\n  * Click **Add to Dashboard**\n  * Select your **`Retail Revenue & Supply Chain`** dashboard\n* Navigate back to your dashboard to view this change\n  * If you wish to change the organization of visualizations, click the three vertical buttons in the top right of the screen; click **Edit** in the menu that appears and you'll be able to drag and resize visualizations","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"--i18n-2396d183-ba9d-4477-a92a-690506110da6","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"c6aeedf8-94ec-4b82-a642-ab99b2bb7d97"},{"version":"CommandV1","origId":2139271331630338,"guid":"18833583-67b7-408d-86b3-dde4773400fd","subtype":"command","commandType":"auto","position":2.0,"command":"%md-sandbox\n\n<div style=\"text-align: center; line-height: 0; padding-top: 9px;\">\n  <img src=\"https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png\" alt=\"Databricks Learning\" style=\"width: 600px\">\n</div>","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"5147a6e0-7682-4058-9262-002d96eeda1f"}],"dashboards":[],"guid":"44931a52-f435-43af-a635-7d82a2b7b6fe","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{},"reposExportFormat":"SOURCE"}